#!/usr/bin/env kxh_python
import subprocess
import tabulate


def get_node_info():
    cmd = ['scontrol', 'show', 'node']
    return subprocess.run(
        cmd, capture_output=True, text=True, check=True).stdout


def parse_node_info(node_info):
    info = {}
    t = node = state = partition = None
    for line in node_info.splitlines():
        line = line.strip()
        if line.startswith('NodeName='):
            node = line.replace('NodeName=', '').split(' ')[0]
            continue
        if line.startswith('State='):
            state = line.split()[0].replace('State=', '')
            continue
        if line.startswith('Partitions='):
            partition = line.replace('Partitions=', '')
            continue
        if line.startswith('CfgTRES='):
            line = line.replace('CfgTRES=', '')
            t = 'total'
        elif line.startswith('AllocTRES='):
            line = line.replace('AllocTRES=', '')
            t = 'alloc'
        else:
            continue
        if not line:
            continue
        for gres in line.split(','):
            k, v = gres.split('=')
            if not k.startswith('gres/'):
                continue
            if k == 'gres/gpu':
                continue
            k = k.replace('gres/gpu:', '')
            default = {
                'state': state,
                'partition': partition,
                'gres': {},
            }
            node_info = info.setdefault(node, default)
            gres_info = node_info['gres'].setdefault(k, {})
            gres_info[t] = gres_info.get(t, 0) + int(v)
    return info


def format_table(info):
    tab_info = [
        (k, i['state'], i['partition'], g,
         f"{v.get('alloc', 0)}/{v.get('total', 0)}")
        for k, i in info.items() for g, v in i['gres'].items()]
    table = tabulate.tabulate(
        tab_info, headers=['Node', 'State', 'Partition', 'GPU', 'Alloc/Total'],
        tablefmt="rounded_outline")
    return table


def main():
    node_info = get_node_info()
    info = parse_node_info(node_info)
    table = format_table(info)
    print(table)


if __name__ == "__main__":
    main()
