#!/bin/sh

# DEFAULT_DARK_THEME=tokyonight_night
# DEFAULT_LIGHT_THEME=tokyonight_day
DEFAULT_DARK_THEME=catppuccin_mocha
DEFAULT_LIGHT_THEME=catppuccin_latte
DEFAULT_MODE="auto"

TEMP_FILE=/tmp/kxh-daily-color
FORCE=0


daily_color() {
    local COLORS=(
        # tokyo-night
        "#7dcfff" "#73daca" "#b4f9f8" "#9ece6a" "#ff9e64" "#f7768e" "#bb9af7"
        # catppuccin
        # "#dc8a78" "#ea76cb" "#d20f39" "#fe640b" "#40a02b" "#1e66f5" "#7287fd"
    )
    if [ -z $1 ]; then
        local DAY_OF_WEEK=$(date +%u)
        echo ${COLORS[$DAY_OF_WEEK - 1]}
    elif [ $1 == "random" ]; then
        echo ${COLORS[$((RANDOM % ${#COLORS[@]}))]}
    elif [ ${1:0:1} == "#" ]; then
        echo $1
    else
        echo ${COLORS[$1]}
    fi
}

color_mode() {
    if [ $DEFAULT_MODE != "auto" ]; then
        echo $DEFAULT_MODE
        return
    fi
    local MODE=$(defaults read -g AppleInterfaceStyle 2>/dev/null)
    if [ -z $MODE ]; then
        echo "light"
    else
        echo "dark"
    fi
}

theme() {
    local MODE=$(color_mode)
    local THEME=${DARK_THEME:-$DEFAULT_DARK_THEME}
    if [ $MODE == "light" ]; then
        THEME=${LIGHT_THEME:-$DEFAULT_LIGHT_THEME}
    fi
    echo $THEME
}


update_macos() {
    local MODE=$(color_mode)
    if [ $MODE == "light" ]; then
        MODE="false"
    else
        MODE="true"
    fi
    osascript -e "tell application \"System Events\" to tell appearance preferences to set dark mode to $MODE"
}


update_aerc() {
    local dir=${XDG_CONFIG_HOME}/aerc/stylesets
    ln -sf $dir/$(theme) $dir/_active_theme
    if [[ ! -z $(pgrep aerc) ]]; then
        aerc ":reload -s _active_theme" > /dev/null
    fi
}


update_alacritty() {
    if [ -z $ALACRITTY_SOCKET ]; then
        return
    fi
    local dir=${XDG_CONFIG_HOME}/alacritty/themes
    ln -sf $dir/$(theme).toml $dir/_active_theme.toml
    touch $dir/alacritty.toml
}


_kitty_get_colors() {
    kitty @ get-colors | grep "^$1" | tr -s ' ' | cut -d ' ' -f 2
}


update_kitty() {
    if [ -z $KITTY_PID ]; then
        return
    fi
    local COLOR=$1
    local dir=${XDG_CONFIG_HOME}/kitty/themes/
    ln -sf $dir/$(theme).conf $dir/_active_theme.conf
    kitty @ set-colors -a -c $dir/_active_theme.conf
    local FG=$(_kitty_get_colors foreground)
    local AFG
    if [ $2 == "dark" ]; then
        AFG=$(_kitty_get_colors background)
    else
        AFG=$(_kitty_get_colors foreground)
    fi
    KITTY_COLORS=(
        active_tab_foreground=$AFG
        active_tab_background=$COLOR
        inactive_tab_foreground=$FG
    )
    kitty @ set-colors -a -c ${KITTY_COLORS[@]}
}


update_sioyek() {
    # TODO: cli activation
    local dir=$XDG_CONFIG_HOME/sioyek/themes
    ln -sf $dir/$(theme).config $dir/_active_theme.config
}


update_sketchybar() {
    touch $XDG_CONFIG_HOME/sketchybar/sketchybarrc
}


update_yabai() {
    yabai -m config insert_feedback_color "0xe0${1:2}"
}

update_yazi() {
    # TODO: Waiting for the issue below to be resolved:
    # - https://github.com/sxyazi/yazi/issues/1644
    local dir=$XDG_CONFIG_HOME/yazi
    echo "[flavor]\nuse = \"$(theme)\"" > $dir/theme.toml
}


while getopts "h?fdl" opt; do
    case $opt in
        h|\?)
            echo "Usage: system-color [-h] [-f] [-d|-l] (number)"
            echo "  -h: Show this help message"
            echo "  -f: Force update"
            echo "  -d: Set dark mode"
            echo "  -l: Set light mode"
            echo "  number: Set color by index"
            exit 0
            ;;
        d)
            DEFAULT_MODE="dark"
            ;;
        l)
            DEFAULT_MODE="light"
            ;;
        f)
            FORCE=1
            ;;
    esac
done
shift $((OPTIND-1))
COLOR=$(daily_color $1)
MODE=$(color_mode)
THEME=$(theme)
if [ ! -z $COLOR ]; then
    if [ -f $TEMP_FILE ] && [ $(cat $TEMP_FILE) == "$MODE:$COLOR:$THEME" ]; then
        if [ $FORCE == 0 ]; then
            echo "$MODE:$COLOR:$THEME"
            exit 0
        fi
    fi
    echo "$MODE:$COLOR:$THEME" | tee $TEMP_FILE
    echo "export DAILY_COLOR=$COLOR" > $TEMP_FILE.sh
    update_macos
    update_aerc
    update_alacritty
    update_kitty $COLOR $MODE
    update_sioyek
    update_sketchybar
    update_yabai $COLOR
    update_yazi
else
    echo "Error: Invalid color"
    exit 1
fi
