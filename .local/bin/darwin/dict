#!/usr/bin/env python

import pydoc
import re
import sys
import DictionaryServices
import textwrap


MARGIN = 4 * ' '
ARROW = u'\u25B6'
KEYWORDS = ['PHRASES', 'DERIVATIVES', 'ORIGIN']
WIDTH = 76
SEPARATOR = '\n' + MARGIN + (WIDTH - len(MARGIN)) * '^'


def wrap(text, indent_level=1):
    wrapper = textwrap.wrap(
        text, width=WIDTH,
        initial_indent=indent_level * MARGIN,
        subsequent_indent=MARGIN)
    return '\n'.join(wrapper)


def split(text):
    identifiers = KEYWORDS + [ARROW]
    return re.split('(' + '|'.join(identifiers) + ')', text)


def format_title(tokens):
    tokens[0] = MARGIN + tokens[0] + SEPARATOR
    return tokens


def format_parts(tokens):
    new_tokens = []
    while tokens:
        t = tokens.pop(0)
        if t == ARROW:
            part = t + ' ' + tokens.pop(0)
            t = wrap(part)
        new_tokens.append(t)
    return new_tokens


def format_others(tokens):
    new_tokens = []
    while tokens:
        t = tokens.pop(0)
        if t in KEYWORDS:
            t = '\n' + MARGIN + t + SEPARATOR + '\n'
            t += wrap(tokens.pop(0).strip())
        new_tokens.append(t)
    return new_tokens


def format(text):
    tokens = split(text)
    tokens = format_title(tokens)
    tokens = format_parts(tokens)
    tokens = format_others(tokens)
    return '\n'.join(tokens)


def main():
    try:
        search_term = sys.argv[1]
    except IndexError:
        print('No search term was entered.')
        return

    text = DictionaryServices.DCSCopyTextDefinition(
        None, search_term, (0, len(search_term)))

    if not text:
        print('"%s" was not found in Dictionary.' % (search_term))
        return

    pydoc.pager(format(text).encode('utf-8'))


if __name__ == '__main__':
    main()
